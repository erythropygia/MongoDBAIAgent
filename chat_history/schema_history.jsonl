[{"role": "system", "content": "Sen sadece Türkçe konuşan ve düşünen, MongoDB ve Python'da usta bir yapay zeka modelisin.\nKullanıcının isteklerini gerçekleştirecek python kodları üret.\n**Ancak sadece okuma (`find`, `aggregate`) işlemleri yapabilirsin.** Silme (`delete`), güncelleme (`update`) veya ekleme (`insert`) işlemleri içeren kodlar yazmamalısın.\n"}, {"role": "user", "content": "Aşağıdaki MongoDB şema(lar)ına dayanarak:\n[{'DBName': 'Emotion4U_UserDB', 'Collection': 'User', 'Description': 'Bu koleksiyon, sistemdeki kullanıcıların hesap bilgilerini içerir. Kullanıcıların isim, e-posta, telefon numarası gibi temel bilgileri yanı sıra, rollerine (Admin, Callback, User) ve hesap doğrulama durumlarına dair bilgiler burada saklanır.', 'Enums': 'Role: Admin, Callback, User | IsEmailConfirmed: true, false', 'EnumsDescription': 'Role: Kullanıcının sistemdeki yetki düzeyini belirtir. Admin yöneticileri, Callback sistemin dış servisler için oluşturduğu özel hesapları, User ise standart kullanıcıları ifade eder. | IsEmailConfirmed: Kullanıcının emailini onaylayıp onaylamadığını ifade eder. true ise onaylı, false ise onaysız email demektir.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'FullName': 'str', 'Email': 'str', 'PhoneNumber': 'str', 'Password': 'str', 'LastTokens': 'list', 'Role': 'str', 'IsEmailConfirmed': 'bool'}, 'SimilarityScore': 0.5296026620138077}, {'DBName': 'Emotion4U_NotificationDB', 'Collection': 'NotificationRequests', 'Description': 'Bu koleksiyon, kullanıcılara gönderilen bildirim isteklerini içerir. Kullanıcının kayıt, şifre sıfırlama gibi işlemleri sırasında tetiklenen bildirimlerin ne zaman, hangi iletişim kanalıyla (e-posta, SMS vb.) ve hangi olay sonucunda gönderildiği bilgisi burada tutulur. Bildirimlerin durumu (başarılı, başarısız, beklemede) da sistem tarafından izlenir.', 'Enums': 'EventType: ForgotPassword, Register | NotificationType: Email, Sms', 'EnumsDescription': 'EventType: Bildirimlerin hangi olay sonucunda tetiklendiğini gösterir. Örneğin, ForgotPassword şifre sıfırlama işlemini, Register ise yeni kullanıcı kaydını ifade eder. | NotificationType: Bildirimlerin hangi iletişim kanalıyla gönderildiğini belirtir. Email e-posta ile, Sms ise kısa mesaj ile gönderildiğini gösterir.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'PhoneNumber': 'str', 'Content': 'str', 'EventType': 'str', 'NotificationType': 'str', 'Status': 'str'}, 'SimilarityScore': 0.5010570833363945}]\n\nAşağıdaki kullanıcı sorgusunu gerçekleştirmek için gerekli db name ve collection bilgilerini seç (tek bir collection ya da birden çok collection gerekebilir bunu aşağıdaki query'den bulacaksın) ve sana verilen json formatında gerekli dbleri dön:\nuser bilgilerini getir\n\nVereceğin cevap aşağıdaki formatta olmalı:\n```json\n[\n  {\n    \"DBName\": \"db_name1\",\n    \"Collection\": \"collection_name1\",\n    \"Description\": \"description1\",\n    \"Enums\": \"enums1\",\n    \"EnumsDescription\": \"enumsdescription1\",\n    \"Schema\": \"schema1\",\n    \"SimilarityScore\": \"similarity_score1\"\n  },\n  ...\n]\n"}]
[{"role": "system", "content": "Sen sadece Türkçe konuşan ve düşünen, MongoDB ve Python'da usta bir yapay zeka modelisin.\nKullanıcının isteklerini gerçekleştirecek python kodları üret.\n**Ancak sadece okuma (`find`, `aggregate`) işlemleri yapabilirsin.** Silme (`delete`), güncelleme (`update`) veya ekleme (`insert`) işlemleri içeren kodlar yazmamalısın.\n"}, {"role": "user", "content": "Aşağıdaki MongoDB veri tabanı şemalarına  dayanarak, aşağıdaki kullanıcı sorgusunu (emaillerini onaylamış kullanıcılardan data analysis yapmış olanların email adreslerini listeler misin?) gerçekleştir:  \n\n[{'DBName': 'Emotion4U_NotificationDB', 'Collection': 'NotificationTemplates', 'Description': 'Bu koleksiyon, kullanıcılara gönderilen bildirimlerin şablonlarını içerir. Bildirimlerin içeriği, konusu ve formatı burada belirlenir. Şablonlar, bildirim türüne (e-posta, SMS) ve etkinlik türüne (şifre sıfırlama, kayıt vb.) göre kategorize edilir. Sistem, gerektiğinde bu şablonları kullanarak otomatik bildirimler oluşturur.', 'Enums': 'EventType: ForgotPassword, Register | NotificationType: Email, Sms', 'EnumsDescription': 'EventType: Bildirim şablonlarının hangi olay için kullanılacağını belirtir. ForgotPassword, şifre sıfırlama işlemi için kullanılan şablonları ifade eder. | NotificationType: Şablonun hangi iletişim kanalında kullanılacağını belirler. Email şablonları e-posta bildirimleri için, Sms şablonları ise kısa mesajlar için kullanılır.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Subject': 'str', 'Template': 'str', 'NotificationType': 'str', 'EventType': 'str'}, 'SimilarityScore': 0.6184697757339576}, {'DBName': 'Emotion4U_UserDB', 'Collection': 'User', 'Description': 'Bu koleksiyon, sistemdeki kullanıcıların hesap bilgilerini içerir. Kullanıcıların isim, e-posta, telefon numarası gibi temel bilgileri yanı sıra, rollerine (Admin, Callback, User) ve hesap doğrulama durumlarına dair bilgiler burada saklanır.', 'Enums': 'Role: Admin, Callback, User | IsEmailConfirmed: true, false', 'EnumsDescription': 'Role: Kullanıcının sistemdeki yetki düzeyini belirtir. Admin yöneticileri, Callback sistemin dış servisler için oluşturduğu özel hesapları, User ise standart kullanıcıları ifade eder. | IsEmailConfirmed: Kullanıcının emailini onaylayıp onaylamadığını ifade eder. true ise onaylı, false ise onaysız email demektir.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'FullName': 'str', 'Email': 'str', 'PhoneNumber': 'str', 'Password': 'str', 'LastTokens': 'list', 'Role': 'str', 'IsEmailConfirmed': 'bool'}, 'SimilarityScore': 0.6053402612877168}, {'DBName': 'Emotion4U_NotificationDB', 'Collection': 'NotificationRequests', 'Description': 'Bu koleksiyon, kullanıcılara gönderilen bildirim isteklerini içerir. Kullanıcının kayıt, şifre sıfırlama gibi işlemleri sırasında tetiklenen bildirimlerin ne zaman, hangi iletişim kanalıyla (e-posta, SMS vb.) ve hangi olay sonucunda gönderildiği bilgisi burada tutulur. Bildirimlerin durumu (başarılı, başarısız, beklemede) da sistem tarafından izlenir.', 'Enums': 'EventType: ForgotPassword, Register | NotificationType: Email, Sms', 'EnumsDescription': 'EventType: Bildirimlerin hangi olay sonucunda tetiklendiğini gösterir. Örneğin, ForgotPassword şifre sıfırlama işlemini, Register ise yeni kullanıcı kaydını ifade eder. | NotificationType: Bildirimlerin hangi iletişim kanalıyla gönderildiğini belirtir. Email e-posta ile, Sms ise kısa mesaj ile gönderildiğini gösterir.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'PhoneNumber': 'str', 'Content': 'str', 'EventType': 'str', 'NotificationType': 'str', 'Status': 'str'}, 'SimilarityScore': 0.5832436739977869}, {'DBName': 'Emotion4U_EvaluationDB', 'Collection': 'AdvertisementDataAnalyses', 'Description': 'Bu koleksiyon, kullanıcıların reklam verisi analizlerini içeren kayıtları barındırır. Kullanıcılar, belirli reklam kampanyalarına ait performans verilerini analiz edebilir, etkileşim oranlarını inceleyebilir ve hedef kitle analizleri yapabilir. Reklam verisi analizi, pazarlama stratejilerinin geliştirilmesine ve kampanya optimizasyonuna katkı sağlar. Analiz sonuçlarının başarılı bir şekilde iletilip iletilmediği ve tamamlanma durumu gibi metrikler de burada takip edilir.', 'Enums': 'IsSuccessSent: true, false | IsComplete: true, false', 'EnumsDescription': 'IsSuccessSent: Kullanıcının yaptığı reklam analizi isteğinin başarıyla gelip gelmediğini ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder. | IsComplete: Kullanıcının yaptığı reklam analiz işleminin başarıyla tamamlanıp tamamlanmadığını ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'DataId': 'str', 'DataSubject': 'str', 'Response': 'str', 'IsSuccessSent': 'bool', 'IsComplete': 'bool'}, 'SimilarityScore': 0.5632653647728297}, {'DBName': 'Emotion4U_EvaluationDB', 'Collection': 'Subscriptions', 'Description': 'Bu koleksiyon, kullanıcıların abonelik planlarını ve kullanım kotalarını içerir. Kullanıcıların sahip olduğu abonelik türü (Free, Premium, Custom) ve kullanım durumları buraya kaydedilir. Kullanıcının mevcut paketine göre sahip olduğu analiz kotaları (metin analizi, CV analizi, reklam verisi analizi gibi) detaylı olarak takip edilir. Kota kullanımı ve kalan haklar sistem tarafından yönetilir.', 'Enums': 'Package: Free, Premium, Custom', 'EnumsDescription': 'Package: Kullanıcının sahip olduğu abonelik türü. Free ücretsiz planı, Premium daha fazla analiz hakkı sunan bir paketi ve Custom kullanıcıya özel belirlenen bir paketi ifade eder.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'Package': 'str', 'UsedQuota': {'type': 'dict', 'structure': {'EvaluateDataQuota': 'int', 'EvaluateCVQuota': 'int', 'EvaluateAdvertisementDataQuota': 'int'}}, 'Quota': {'type': 'dict', 'structure': {'EvaluateDataQuota': 'int', 'EvaluateCVQuota': 'int', 'EvaluateAdvertisementDataQuota': 'int'}}}, 'SimilarityScore': 0.5513741880670188}]\n\n1. **Genişletilmiş Eşleşme**:  \n  - Tam eşleşmeleri (**exact match**) ve kısmi eşleşmeleri (**partial match**) değerlendir.  \n  - Eğer doğrudan eşleşen bir collection yoksa, boş liste dönebilirsin\n\n2. **Bağlamsal Anlamlandırma**:  \n  - Kullanıcı sorgusundaki alanları şema ile karşılaştır ve anlam bakımından en iyi eşleşenleri belirle.  \n  - Eğer birden fazla collection gerekiyorsa, bunları belirle\n\n3. **Çıktı Formatı**:  \n  - Gerekli **db name** ve **collection** bilgilerini seç.  \n  - Birden çok collection gerekiyorsa, her birini listeye ekle \n\n**Sonucu aşağıdaki JSON formatında liste olarak dön**:\n```json\n[\n  {\n    \"DBName\": \"db_name1\",\n    \"Collection\": \"collection_name1\",\n    \"Description\": \"description1\",\n    \"Enums\": \"enums1\",\n    \"EnumsDescription\": \"enumsdescription1\",\n    \"Schema\": \"schema1\",\n    \"SimilarityScore\": \"similarity_score1\"\n  },\n  ...\n]\n```\n"}, {"role": "assistant", "content": "Kullanıcı sorgusu, emaillerini onaylamış ve veri analizi yapmış kullanıcıların email adreslerini listelemeyi gerektiriyor.  Bu, `Emotion4U_UserDB.User` koleksiyonunda `IsEmailConfirmed: true` olan ve `Emotion4U_EvaluationDB.AdvertisementDataAnalyses` koleksiyonunda `Email` alanında yer alan kullanıcıları bulmayı gerektiriyor.\n\nAşağıdaki Python kodu, MongoDB'den sadece okuma işlemleri yaparak bu kullanıcıların email adreslerini listeler:\n\n```python\nimport pymongo\n\n# MongoDB bağlantı bilgilerinizi girin\nclient = pymongo.MongoClient(\"mongodb://localhost:27017/\") # veya bağlantı stringiniz\ndb = client[\"Emotion4U_UserDB\"]\nusers_collection = db[\"User\"]\n\ndb_eval = client[\"Emotion4U_EvaluationDB\"]\nanalysis_collection = db_eval[\"AdvertisementDataAnalyses\"]\n\n# Email onaylanmış kullanıcıları bulun\nconfirmed_users = list(users_collection.find({\"IsEmailConfirmed\": True}, {\"Email\": 1, \"_id\": 0}))\n\n# Veri analizi yapmış kullanıcıların email adreslerini bulun\nanalysis_emails = list(analysis_collection.find({}, {\"Email\": 1, \"_id\": 0}))\n\n# İki listeyi birleştirip benzersiz email adreslerini alın\nemail_list = list({email[\"Email\"] for email in confirmed_users if email[\"Email\"] in [item.get(\"Email\") for item in analysis_emails]})\n\n\n#Sonuçları JSON formatında yazdırma (isteğe bağlı)\nimport json\nprint(json.dumps(email_list, indent=2))\n\n\nclient.close()\n\n```\n\nBu kod öncelikle onaylanmış kullanıcıların email adreslerini, sonra da veri analizi yapmış kullanıcıların email adreslerini ayrı ayrı çeker. Daha sonra iki listeyi karşılaştırarak her iki listede de bulunan (hem onaylanmış hem de veri analizi yapmış) kullanıcıların email adreslerini benzersiz olarak bir listede toplar ve bu listeyi yazdırır.  `_id` alanını getirmemekle performansı artırabiliriz.  \n"}]
[{"role": "system", "content": "Sen sadece Türkçe konuşan ve düşünen, MongoDB ve Python'da usta bir yapay zeka modelisin.\nKullanıcının isteklerini gerçekleştirecek python kodları üret.\n**Ancak sadece okuma (`find`, `aggregate`) işlemleri yapabilirsin.** Silme (`delete`), güncelleme (`update`) veya ekleme (`insert`) işlemleri içeren kodlar yazmamalısın.\n"}, {"role": "user", "content": "Aşağıdaki MongoDB şema(lar)ına dayanarak:\n[{'DBName': 'Emotion4U_NotificationDB', 'Collection': 'NotificationTemplates', 'Description': 'Bu koleksiyon, kullanıcılara gönderilen bildirimlerin şablonlarını içerir. Bildirimlerin içeriği, konusu ve formatı burada belirlenir. Şablonlar, bildirim türüne (e-posta, SMS) ve etkinlik türüne (şifre sıfırlama, kayıt vb.) göre kategorize edilir. Sistem, gerektiğinde bu şablonları kullanarak otomatik bildirimler oluşturur.', 'Enums': 'EventType: ForgotPassword, Register | NotificationType: Email, Sms', 'EnumsDescription': 'EventType: Bildirim şablonlarının hangi olay için kullanılacağını belirtir. ForgotPassword, şifre sıfırlama işlemi için kullanılan şablonları ifade eder. | NotificationType: Şablonun hangi iletişim kanalında kullanılacağını belirler. Email şablonları e-posta bildirimleri için, Sms şablonları ise kısa mesajlar için kullanılır.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Subject': 'str', 'Template': 'str', 'NotificationType': 'str', 'EventType': 'str'}, 'SimilarityScore': 0.6184697757339576}, {'DBName': 'Emotion4U_UserDB', 'Collection': 'User', 'Description': 'Bu koleksiyon, sistemdeki kullanıcıların hesap bilgilerini içerir. Kullanıcıların isim, e-posta, telefon numarası gibi temel bilgileri yanı sıra, rollerine (Admin, Callback, User) ve hesap doğrulama durumlarına dair bilgiler burada saklanır.', 'Enums': 'Role: Admin, Callback, User | IsEmailConfirmed: true, false', 'EnumsDescription': 'Role: Kullanıcının sistemdeki yetki düzeyini belirtir. Admin yöneticileri, Callback sistemin dış servisler için oluşturduğu özel hesapları, User ise standart kullanıcıları ifade eder. | IsEmailConfirmed: Kullanıcının emailini onaylayıp onaylamadığını ifade eder. true ise onaylı, false ise onaysız email demektir.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'FullName': 'str', 'Email': 'str', 'PhoneNumber': 'str', 'Password': 'str', 'LastTokens': 'list', 'Role': 'str', 'IsEmailConfirmed': 'bool'}, 'SimilarityScore': 0.6053402612877168}, {'DBName': 'Emotion4U_NotificationDB', 'Collection': 'NotificationRequests', 'Description': 'Bu koleksiyon, kullanıcılara gönderilen bildirim isteklerini içerir. Kullanıcının kayıt, şifre sıfırlama gibi işlemleri sırasında tetiklenen bildirimlerin ne zaman, hangi iletişim kanalıyla (e-posta, SMS vb.) ve hangi olay sonucunda gönderildiği bilgisi burada tutulur. Bildirimlerin durumu (başarılı, başarısız, beklemede) da sistem tarafından izlenir.', 'Enums': 'EventType: ForgotPassword, Register | NotificationType: Email, Sms', 'EnumsDescription': 'EventType: Bildirimlerin hangi olay sonucunda tetiklendiğini gösterir. Örneğin, ForgotPassword şifre sıfırlama işlemini, Register ise yeni kullanıcı kaydını ifade eder. | NotificationType: Bildirimlerin hangi iletişim kanalıyla gönderildiğini belirtir. Email e-posta ile, Sms ise kısa mesaj ile gönderildiğini gösterir.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'PhoneNumber': 'str', 'Content': 'str', 'EventType': 'str', 'NotificationType': 'str', 'Status': 'str'}, 'SimilarityScore': 0.5832436739977869}, {'DBName': 'Emotion4U_EvaluationDB', 'Collection': 'AdvertisementDataAnalyses', 'Description': 'Bu koleksiyon, kullanıcıların reklam verisi analizlerini içeren kayıtları barındırır. Kullanıcılar, belirli reklam kampanyalarına ait performans verilerini analiz edebilir, etkileşim oranlarını inceleyebilir ve hedef kitle analizleri yapabilir. Reklam verisi analizi, pazarlama stratejilerinin geliştirilmesine ve kampanya optimizasyonuna katkı sağlar. Analiz sonuçlarının başarılı bir şekilde iletilip iletilmediği ve tamamlanma durumu gibi metrikler de burada takip edilir.', 'Enums': 'IsSuccessSent: true, false | IsComplete: true, false', 'EnumsDescription': 'IsSuccessSent: Kullanıcının yaptığı reklam analizi isteğinin başarıyla gelip gelmediğini ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder. | IsComplete: Kullanıcının yaptığı reklam analiz işleminin başarıyla tamamlanıp tamamlanmadığını ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'DataId': 'str', 'DataSubject': 'str', 'Response': 'str', 'IsSuccessSent': 'bool', 'IsComplete': 'bool'}, 'SimilarityScore': 0.5632653647728297}, {'DBName': 'Emotion4U_EvaluationDB', 'Collection': 'Subscriptions', 'Description': 'Bu koleksiyon, kullanıcıların abonelik planlarını ve kullanım kotalarını içerir. Kullanıcıların sahip olduğu abonelik türü (Free, Premium, Custom) ve kullanım durumları buraya kaydedilir. Kullanıcının mevcut paketine göre sahip olduğu analiz kotaları (metin analizi, CV analizi, reklam verisi analizi gibi) detaylı olarak takip edilir. Kota kullanımı ve kalan haklar sistem tarafından yönetilir.', 'Enums': 'Package: Free, Premium, Custom', 'EnumsDescription': 'Package: Kullanıcının sahip olduğu abonelik türü. Free ücretsiz planı, Premium daha fazla analiz hakkı sunan bir paketi ve Custom kullanıcıya özel belirlenen bir paketi ifade eder.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'Package': 'str', 'UsedQuota': {'type': 'dict', 'structure': {'EvaluateDataQuota': 'int', 'EvaluateCVQuota': 'int', 'EvaluateAdvertisementDataQuota': 'int'}}, 'Quota': {'type': 'dict', 'structure': {'EvaluateDataQuota': 'int', 'EvaluateCVQuota': 'int', 'EvaluateAdvertisementDataQuota': 'int'}}}, 'SimilarityScore': 0.5513741880670188}]\n\nAşağıdaki kullanıcı sorgusunu gerçekleştirmek için gerekli db name ve collection bilgilerini seç:\nemaillerini onaylamış kullanıcılardan data analysis yapmış olanların email adreslerini listeler misin?\n\nVereceğin cevap aşağıdaki formatta olmalı ve kullanıcı sorgusuyla ilişkilendirdiğin tüm veri tabanı bilgilerini içermelidir:\n```json\n[\n  {\n    \"DBName\": \"db_name1\",\n    \"Collection\": \"collection_name1\",\n    \"Description\": \"description1\",\n    \"Enums\": \"enums1\",\n    \"EnumsDescription\": \"enumsdescription1\",\n    \"Schema\": \"schema1\",\n    \"SimilarityScore\": \"similarity_score1\"\n  },\n  ...\n]\n```\n"}, {"role": "assistant", "content": "```json\n[\n  {\n    \"DBName\": \"Emotion4U_UserDB\",\n    \"Collection\": \"User\",\n    \"Description\": \"Bu koleksiyon, sistemdeki kullanıcıların hesap bilgilerini içerir. Kullanıcıların isim, e-posta, telefon numarası gibi temel bilgileri yanı sıra, rollerine (Admin, Callback, User) ve hesap doğrulama durumlarına dair bilgiler burada saklanır.\",\n    \"Enums\": \"Role: Admin, Callback, User | IsEmailConfirmed: true, false\",\n    \"EnumsDescription\": \"Role: Kullanıcının sistemdeki yetki düzeyini belirtir. Admin yöneticileri, Callback sistemin dış servisler için oluşturduğu özel hesapları, User ise standart kullanıcıları ifade eder. | IsEmailConfirmed: Kullanıcının emailini onaylayıp onaylamadığını ifade eder. true ise onaylı, false ise onaysız email demektir.\",\n    \"Schema\": {\"_id\": \"ObjectId\", \"CreatedAt\": \"datetime\", \"FullName\": \"str\", \"Email\": \"str\", \"PhoneNumber\": \"str\", \"Password\": \"str\", \"LastTokens\": \"list\", \"Role\": \"str\", \"IsEmailConfirmed\": \"bool\"},\n    \"SimilarityScore\": 0.6053402612877168\n  },\n  {\n    \"DBName\": \"Emotion4U_EvaluationDB\",\n    \"Collection\": \"AdvertisementDataAnalyses\",\n    \"Description\": \"Bu koleksiyon, kullanıcıların reklam verisi analizlerini içeren kayıtları barındırır. Kullanıcılar, belirli reklam kampanyalarına ait performans verilerini analiz edebilir, etkileşim oranlarını inceleyebilir ve hedef kitle analizleri yapabilir. Reklam verisi analizi, pazarlama stratejilerinin geliştirilmesine ve kampanya optimizasyonuna katkı sağlar. Analiz sonuçlarının başarılı bir şekilde iletilip iletilmediği ve tamamlanma durumu gibi metrikler de burada takip edilir.\",\n    \"Enums\": \"IsSuccessSent: true, false | IsComplete: true, false\",\n    \"EnumsDescription\": \"IsSuccessSent: Kullanıcının yaptığı reklam analizi isteğinin başarıyla gelip gelmediğini ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder. | IsComplete: Kullanıcının yaptığı reklam analiz işleminin başarıyla tamamlanıp tamamlanmadığını ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder.\",\n    \"Schema\": {\"_id\": \"ObjectId\", \"CreatedAt\": \"datetime\", \"Email\": \"str\", \"DataId\": \"str\", \"DataSubject\": \"str\", \"Response\": \"str\", \"IsSuccessSent\": \"bool\", \"IsComplete\": \"bool\"},\n    \"SimilarityScore\": 0.5632653647728297\n  }\n]\n```\n\nAşağıdaki Python kodu, verilen MongoDB koleksiyonlarını kullanarak, emaillerini onaylamış kullanıcıların data analysis yapmış olanların email adreslerini listeler:\n\n\n```python\nimport pymongo\n\n# MongoDB bağlantı bilgilerini girin\nclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")  # veya bağlantı dizinizi girin\ndb = client[\"Emotion4U_UserDB\"]\nuser_collection = db[\"User\"]\ndb2 = client[\"Emotion4U_EvaluationDB\"]\nanalysis_collection = db2[\"AdvertisementDataAnalyses\"]\n\npipeline = [\n    {\n        \"$lookup\": {\n            \"from\": \"AdvertisementDataAnalyses\",\n            \"localField\": \"Email\",\n            \"foreignField\": \"Email\",\n            \"as\": \"analyses\"\n        }\n    },\n    {\n        \"$match\": {\n            \"IsEmailConfirmed\": True,\n            \"analyses\": {\"$exists\": True, \"$ne\": []}\n        }\n    },\n    {\n        \"$project\": {\n            \"_id\": 0,\n            \"Email\": 1\n        }\n    }\n]\n\nemailler = list(user_collection.aggregate(pipeline))\n\nfor email in emailler:\n    print(email[\"Email\"])\n\nclient.close()\n\n```\n\n**Not:** Bu kod, `$lookup` operatörünü kullanarak iki koleksiyonu birleştirir.  `IsEmailConfirmed: True` ve en az bir data analysis kaydı olan kullanıcıları filtreler ve sadece email adreslerini döndürür.  Bağlantı bilgilerini kendi MongoDB sunucunuza göre değiştirmeyi unutmayın.  Ayrıca,  sorgu performansını iyileştirmek için indeksler oluşturmanız önerilir.\n"}]
[{"role": "system", "content": "Sen sadece Türkçe konuşan ve düşünen, MongoDB ve Python'da usta bir yapay zeka modelisin.\nKullanıcının isteklerini gerçekleştirecek python kodları üret.\n**Ancak sadece okuma (`find`, `aggregate`) işlemleri yapabilirsin.** Silme (`delete`), güncelleme (`update`) veya ekleme (`insert`) işlemleri içeren kodlar yazmamalısın.\n"}, {"role": "user", "content": "aillerini onaylamış kullanıcılardan data analysis yapmış olanların email adreslerini listeler misin? sorgusunu gerçekleştirmek için gerekli olan db name ve collection bilgilerini aşağıdaki şemadan seç:\n\n[{'DBName': 'Emotion4U_NotificationDB', 'Collection': 'NotificationTemplates', 'Description': 'Bu koleksiyon, kullanıcılara gönderilen bildirimlerin şablonlarını içerir. Bildirimlerin içeriği, konusu ve formatı burada belirlenir. Şablonlar, bildirim türüne (e-posta, SMS) ve etkinlik türüne (şifre sıfırlama, kayıt vb.) göre kategorize edilir. Sistem, gerektiğinde bu şablonları kullanarak otomatik bildirimler oluşturur.', 'Enums': 'EventType: ForgotPassword, Register | NotificationType: Email, Sms', 'EnumsDescription': 'EventType: Bildirim şablonlarının hangi olay için kullanılacağını belirtir. ForgotPassword, şifre sıfırlama işlemi için kullanılan şablonları ifade eder. | NotificationType: Şablonun hangi iletişim kanalında kullanılacağını belirler. Email şablonları e-posta bildirimleri için, Sms şablonları ise kısa mesajlar için kullanılır.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Subject': 'str', 'Template': 'str', 'NotificationType': 'str', 'EventType': 'str'}, 'SimilarityScore': 0.6187636356662467}, {'DBName': 'Emotion4U_UserDB', 'Collection': 'User', 'Description': 'Bu koleksiyon, sistemdeki kullanıcıların hesap bilgilerini içerir. Kullanıcıların isim, e-posta, telefon numarası gibi temel bilgileri yanı sıra, rollerine (Admin, Callback, User) ve hesap doğrulama durumlarına dair bilgiler burada saklanır.', 'Enums': 'Role: Admin, Callback, User | IsEmailConfirmed: true, false', 'EnumsDescription': 'Role: Kullanıcının sistemdeki yetki düzeyini belirtir. Admin yöneticileri, Callback sistemin dış servisler için oluşturduğu özel hesapları, User ise standart kullanıcıları ifade eder. | IsEmailConfirmed: Kullanıcının emailini onaylayıp onaylamadığını ifade eder. true ise onaylı, false ise onaysız email demektir.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'FullName': 'str', 'Email': 'str', 'PhoneNumber': 'str', 'Password': 'str', 'LastTokens': 'list', 'Role': 'str', 'IsEmailConfirmed': 'bool'}, 'SimilarityScore': 0.614234639517335}, {'DBName': 'Emotion4U_EvaluationDB', 'Collection': 'AdvertisementDataAnalyses', 'Description': 'Bu koleksiyon, kullanıcıların reklam verisi analizlerini içeren kayıtları barındırır. Kullanıcılar, belirli reklam kampanyalarına ait performans verilerini analiz edebilir, etkileşim oranlarını inceleyebilir ve hedef kitle analizleri yapabilir. Reklam verisi analizi, pazarlama stratejilerinin geliştirilmesine ve kampanya optimizasyonuna katkı sağlar. Analiz sonuçlarının başarılı bir şekilde iletilip iletilmediği ve tamamlanma durumu gibi metrikler de burada takip edilir.', 'Enums': 'IsSuccessSent: true, false | IsComplete: true, false', 'EnumsDescription': 'IsSuccessSent: Kullanıcının yaptığı reklam analizi isteğinin başarıyla gelip gelmediğini ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder. | IsComplete: Kullanıcının yaptığı reklam analiz işleminin başarıyla tamamlanıp tamamlanmadığını ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'DataId': 'str', 'DataSubject': 'str', 'Response': 'str', 'IsSuccessSent': 'bool', 'IsComplete': 'bool'}, 'SimilarityScore': 0.6111509182008141}, {'DBName': 'Emotion4U_NotificationDB', 'Collection': 'NotificationRequests', 'Description': 'Bu koleksiyon, kullanıcılara gönderilen bildirim isteklerini içerir. Kullanıcının kayıt, şifre sıfırlama gibi işlemleri sırasında tetiklenen bildirimlerin ne zaman, hangi iletişim kanalıyla (e-posta, SMS vb.) ve hangi olay sonucunda gönderildiği bilgisi burada tutulur. Bildirimlerin durumu (başarılı, başarısız, beklemede) da sistem tarafından izlenir.', 'Enums': 'EventType: ForgotPassword, Register | NotificationType: Email, Sms', 'EnumsDescription': 'EventType: Bildirimlerin hangi olay sonucunda tetiklendiğini gösterir. Örneğin, ForgotPassword şifre sıfırlama işlemini, Register ise yeni kullanıcı kaydını ifade eder. | NotificationType: Bildirimlerin hangi iletişim kanalıyla gönderildiğini belirtir. Email e-posta ile, Sms ise kısa mesaj ile gönderildiğini gösterir.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'PhoneNumber': 'str', 'Content': 'str', 'EventType': 'str', 'NotificationType': 'str', 'Status': 'str'}, 'SimilarityScore': 0.6105883248659285}, {'DBName': 'Emotion4U_EvaluationDB', 'Collection': 'Subscriptions', 'Description': 'Bu koleksiyon, kullanıcıların abonelik planlarını ve kullanım kotalarını içerir. Kullanıcıların sahip olduğu abonelik türü (Free, Premium, Custom) ve kullanım durumları buraya kaydedilir. Kullanıcının mevcut paketine göre sahip olduğu analiz kotaları (metin analizi, CV analizi, reklam verisi analizi gibi) detaylı olarak takip edilir. Kota kullanımı ve kalan haklar sistem tarafından yönetilir.', 'Enums': 'Package: Free, Premium, Custom', 'EnumsDescription': 'Package: Kullanıcının sahip olduğu abonelik türü. Free ücretsiz planı, Premium daha fazla analiz hakkı sunan bir paketi ve Custom kullanıcıya özel belirlenen bir paketi ifade eder.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'Package': 'str', 'UsedQuota': {'type': 'dict', 'structure': {'EvaluateDataQuota': 'int', 'EvaluateCVQuota': 'int', 'EvaluateAdvertisementDataQuota': 'int'}}, 'Quota': {'type': 'dict', 'structure': {'EvaluateDataQuota': 'int', 'EvaluateCVQuota': 'int', 'EvaluateAdvertisementDataQuota': 'int'}}}, 'SimilarityScore': 0.5914004147680902}, {'DBName': 'Emotion4U_PaymentDB', 'Collection': 'PaymentPackages', 'Description': 'Bu koleksiyon, sistemde mevcut olan abonelik paketlerini içerir. Kullanıcılara sunulan paketlerin fiyatları, sunduğu analiz kotaları ve uygulanabilecek indirim oranları burada saklanır. Kullanıcılar, bu paketler arasından seçim yaparak ödeme işlemlerini gerçekleştirebilir.', 'Enums': 'Package: Free, Premium, Custom', 'EnumsDescription': 'Package: Sistem tarafından sunulan abonelik türlerini belirtir. Free ücretsiz paketi, Premium daha fazla özellik sunan bir paketi ve Custom kullanıcıya özel bir paketi ifade eder.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'RecordStatus': 'str', 'Package': 'str', 'Price': 'float', 'Discount': 'int', 'Quota': {'type': 'dict', 'structure': {'EvaluateDataQuota': 'int', 'EvaluateCVQuota': 'int', 'EvaluateAdvertisementDataQuota': 'int'}}}, 'SimilarityScore': 0.5693228037061532}]\n\n**‼️ DİKKAT: Cevabın yalnızca aşağıdaki formatta JSON verisi içermesi ve kullanıcı sorgusuyla ilişkili tüm veritabanı bilgilerini eksiksiz kapsaması gerekmektedir. **\n```json\n[\n  {\n    \"DBName\": \"db_name1\",\n    \"Collection\": \"collection_name1\",\n    \"Description\": \"description1\",\n    \"Enums\": \"enums1\",\n    \"EnumsDescription\": \"enumsdescription1\",\n    \"Schema\": \"schema1\",\n    \"SimilarityScore\": \"similarity_score1\"\n  },\n  ...\n]\n```\n"}, {"role": "assistant", "content": "```json\n[\n  {\n    \"DBName\": \"Emotion4U_UserDB\",\n    \"Collection\": \"User\",\n    \"Description\": \"Bu koleksiyon, sistemdeki kullanıcıların hesap bilgilerini içerir. Kullanıcıların isim, e-posta, telefon numarası gibi temel bilgileri yanı sıra, rollerine (Admin, Callback, User) ve hesap doğrulama durumlarına dair bilgiler burada saklanır.\",\n    \"Enums\": \"Role: Admin, Callback, User | IsEmailConfirmed: true, false\",\n    \"EnumsDescription\": \"Role: Kullanıcının sistemdeki yetki düzeyini belirtir. Admin yöneticileri, Callback sistemin dış servisler için oluşturduğu özel hesapları, User ise standart kullanıcıları ifade eder. | IsEmailConfirmed: Kullanıcının emailini onaylayıp onaylamadığını ifade eder. true ise onaylı, false ise onaysız email demektir.\",\n    \"Schema\": {\n      \"_id\": \"ObjectId\",\n      \"CreatedAt\": \"datetime\",\n      \"FullName\": \"str\",\n      \"Email\": \"str\",\n      \"PhoneNumber\": \"str\",\n      \"Password\": \"str\",\n      \"LastTokens\": \"list\",\n      \"Role\": \"str\",\n      \"IsEmailConfirmed\": \"bool\"\n    },\n    \"SimilarityScore\": 0.614234639517335\n  },\n  {\n    \"DBName\": \"Emotion4U_EvaluationDB\",\n    \"Collection\": \"AdvertisementDataAnalyses\",\n    \"Description\": \"Bu koleksiyon, kullanıcıların reklam verisi analizlerini içeren kayıtları barındırır. Kullanıcılar, belirli reklam kampanyalarına ait performans verilerini analiz edebilir, etkileşim oranlarını inceleyebilir ve hedef kitle analizleri yapabilir. Reklam verisi analizi, pazarlama stratejilerinin geliştirilmesine ve kampanya optimizasyonuna katkı sağlar. Analiz sonuçlarının başarılı bir şekilde iletilip iletilmediği ve tamamlanma durumu gibi metrikler de burada takip edilir.\",\n    \"Enums\": \"IsSuccessSent: true, false | IsComplete: true, false\",\n    \"EnumsDescription\": \"IsSuccessSent: Kullanıcının yaptığı reklam analizi isteğinin başarıyla gelip gelmediğini ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder. | IsComplete: Kullanıcının yaptığı reklam analiz işleminin başarıyla tamamlanıp tamamlanmadığını ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder.\",\n    \"Schema\": {\n      \"_id\": \"ObjectId\",\n      \"CreatedAt\": \"datetime\",\n      \"Email\": \"str\",\n      \"DataId\": \"str\",\n      \"DataSubject\": \"str\",\n      \"Response\": \"str\",\n      \"IsSuccessSent\": \"bool\",\n      \"IsComplete\": \"bool\"\n    },\n    \"SimilarityScore\": 0.6111509182008141\n  }\n]\n```\n"}]
[{"role": "system", "content": "Sen sadece Türkçe konuşan ve düşünen, MongoDB ve Python'da usta bir yapay zeka modelisin.\nKullanıcının isteklerini gerçekleştirecek python kodları üret.\n**Ancak sadece okuma (`find`, `aggregate`) işlemleri yapabilirsin.** Silme (`delete`), güncelleme (`update`) veya ekleme (`insert`) işlemleri içeren kodlar yazmamalısın.\n"}, {"role": "user", "content": "maillerini onaylamış kullanıcılardan data analysis yapmış olanların email adreslerini listeler misin? sorgusunu gerçekleştirmek için gerekli olan db name ve collection bilgilerini aşağıdaki şemadan seç:\n\n[{'DBName': 'Emotion4U_NotificationDB', 'Collection': 'NotificationTemplates', 'Description': 'Bu koleksiyon, kullanıcılara gönderilen bildirimlerin şablonlarını içerir. Bildirimlerin içeriği, konusu ve formatı burada belirlenir. Şablonlar, bildirim türüne (e-posta, SMS) ve etkinlik türüne (şifre sıfırlama, kayıt vb.) göre kategorize edilir. Sistem, gerektiğinde bu şablonları kullanarak otomatik bildirimler oluşturur.', 'Enums': 'EventType: ForgotPassword, Register | NotificationType: Email, Sms', 'EnumsDescription': 'EventType: Bildirim şablonlarının hangi olay için kullanılacağını belirtir. ForgotPassword, şifre sıfırlama işlemi için kullanılan şablonları ifade eder. | NotificationType: Şablonun hangi iletişim kanalında kullanılacağını belirler. Email şablonları e-posta bildirimleri için, Sms şablonları ise kısa mesajlar için kullanılır.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Subject': 'str', 'Template': 'str', 'NotificationType': 'str', 'EventType': 'str'}, 'SimilarityScore': 0.6115980120859864}, {'DBName': 'Emotion4U_UserDB', 'Collection': 'User', 'Description': 'Bu koleksiyon, sistemdeki kullanıcıların hesap bilgilerini içerir. Kullanıcıların isim, e-posta, telefon numarası gibi temel bilgileri yanı sıra, rollerine (Admin, Callback, User) ve hesap doğrulama durumlarına dair bilgiler burada saklanır.', 'Enums': 'Role: Admin, Callback, User | IsEmailConfirmed: true, false', 'EnumsDescription': 'Role: Kullanıcının sistemdeki yetki düzeyini belirtir. Admin yöneticileri, Callback sistemin dış servisler için oluşturduğu özel hesapları, User ise standart kullanıcıları ifade eder. | IsEmailConfirmed: Kullanıcının emailini onaylayıp onaylamadığını ifade eder. true ise onaylı, false ise onaysız email demektir.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'FullName': 'str', 'Email': 'str', 'PhoneNumber': 'str', 'Password': 'str', 'LastTokens': 'list', 'Role': 'str', 'IsEmailConfirmed': 'bool'}, 'SimilarityScore': 0.6006005498590663}, {'DBName': 'Emotion4U_NotificationDB', 'Collection': 'NotificationRequests', 'Description': 'Bu koleksiyon, kullanıcılara gönderilen bildirim isteklerini içerir. Kullanıcının kayıt, şifre sıfırlama gibi işlemleri sırasında tetiklenen bildirimlerin ne zaman, hangi iletişim kanalıyla (e-posta, SMS vb.) ve hangi olay sonucunda gönderildiği bilgisi burada tutulur. Bildirimlerin durumu (başarılı, başarısız, beklemede) da sistem tarafından izlenir.', 'Enums': 'EventType: ForgotPassword, Register | NotificationType: Email, Sms', 'EnumsDescription': 'EventType: Bildirimlerin hangi olay sonucunda tetiklendiğini gösterir. Örneğin, ForgotPassword şifre sıfırlama işlemini, Register ise yeni kullanıcı kaydını ifade eder. | NotificationType: Bildirimlerin hangi iletişim kanalıyla gönderildiğini belirtir. Email e-posta ile, Sms ise kısa mesaj ile gönderildiğini gösterir.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'PhoneNumber': 'str', 'Content': 'str', 'EventType': 'str', 'NotificationType': 'str', 'Status': 'str'}, 'SimilarityScore': 0.5841178191938916}, {'DBName': 'Emotion4U_EvaluationDB', 'Collection': 'AdvertisementDataAnalyses', 'Description': 'Bu koleksiyon, kullanıcıların reklam verisi analizlerini içeren kayıtları barındırır. Kullanıcılar, belirli reklam kampanyalarına ait performans verilerini analiz edebilir, etkileşim oranlarını inceleyebilir ve hedef kitle analizleri yapabilir. Reklam verisi analizi, pazarlama stratejilerinin geliştirilmesine ve kampanya optimizasyonuna katkı sağlar. Analiz sonuçlarının başarılı bir şekilde iletilip iletilmediği ve tamamlanma durumu gibi metrikler de burada takip edilir.', 'Enums': 'IsSuccessSent: true, false | IsComplete: true, false', 'EnumsDescription': 'IsSuccessSent: Kullanıcının yaptığı reklam analizi isteğinin başarıyla gelip gelmediğini ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder. | IsComplete: Kullanıcının yaptığı reklam analiz işleminin başarıyla tamamlanıp tamamlanmadığını ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'DataId': 'str', 'DataSubject': 'str', 'Response': 'str', 'IsSuccessSent': 'bool', 'IsComplete': 'bool'}, 'SimilarityScore': 0.5675659501485473}, {'DBName': 'Emotion4U_EvaluationDB', 'Collection': 'Subscriptions', 'Description': 'Bu koleksiyon, kullanıcıların abonelik planlarını ve kullanım kotalarını içerir. Kullanıcıların sahip olduğu abonelik türü (Free, Premium, Custom) ve kullanım durumları buraya kaydedilir. Kullanıcının mevcut paketine göre sahip olduğu analiz kotaları (metin analizi, CV analizi, reklam verisi analizi gibi) detaylı olarak takip edilir. Kota kullanımı ve kalan haklar sistem tarafından yönetilir.', 'Enums': 'Package: Free, Premium, Custom', 'EnumsDescription': 'Package: Kullanıcının sahip olduğu abonelik türü. Free ücretsiz planı, Premium daha fazla analiz hakkı sunan bir paketi ve Custom kullanıcıya özel belirlenen bir paketi ifade eder.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'Package': 'str', 'UsedQuota': {'type': 'dict', 'structure': {'EvaluateDataQuota': 'int', 'EvaluateCVQuota': 'int', 'EvaluateAdvertisementDataQuota': 'int'}}, 'Quota': {'type': 'dict', 'structure': {'EvaluateDataQuota': 'int', 'EvaluateCVQuota': 'int', 'EvaluateAdvertisementDataQuota': 'int'}}}, 'SimilarityScore': 0.5601389588807808}]\n\n**‼️ DİKKAT: Cevabın yalnızca aşağıdaki formatta JSON verisi içermesi ve kullanıcı sorgusuyla ilişkili tüm veritabanı bilgilerini eksiksiz kapsaması gerekmektedir. **\n```json\n[\n  {\n    \"DBName\": \"db_name1\",\n    \"Collection\": \"collection_name1\",\n    \"Description\": \"description1\",\n    \"Enums\": \"enums1\",\n    \"EnumsDescription\": \"enumsdescription1\",\n    \"Schema\": \"schema1\",\n    \"SimilarityScore\": \"similarity_score1\"\n  },\n  ...\n]\n```\n"}, {"role": "assistant", "content": "```json\n[\n  {\n    \"DBName\": \"Emotion4U_UserDB\",\n    \"Collection\": \"User\",\n    \"Description\": \"Bu koleksiyon, sistemdeki kullanıcıların hesap bilgilerini içerir. Kullanıcıların isim, e-posta, telefon numarası gibi temel bilgileri yanı sıra, rollerine (Admin, Callback, User) ve hesap doğrulama durumlarına dair bilgiler burada saklanır.\",\n    \"Enums\": \"Role: Admin, Callback, User | IsEmailConfirmed: true, false\",\n    \"EnumsDescription\": \"Role: Kullanıcının sistemdeki yetki düzeyini belirtir. Admin yöneticileri, Callback sistemin dış servisler için oluşturduğu özel hesapları, User ise standart kullanıcıları ifade eder. | IsEmailConfirmed: Kullanıcının emailini onaylayıp onaylamadığını ifade eder. true ise onaylı, false ise onaysız email demektir.\",\n    \"Schema\": {\"_id\": \"ObjectId\", \"CreatedAt\": \"datetime\", \"FullName\": \"str\", \"Email\": \"str\", \"PhoneNumber\": \"str\", \"Password\": \"str\", \"LastTokens\": \"list\", \"Role\": \"str\", \"IsEmailConfirmed\": \"bool\"},\n    \"SimilarityScore\": 0.6006005498590663\n  },\n  {\n    \"DBName\": \"Emotion4U_EvaluationDB\",\n    \"Collection\": \"AdvertisementDataAnalyses\",\n    \"Description\": \"Bu koleksiyon, kullanıcıların reklam verisi analizlerini içeren kayıtları barındırır. Kullanıcılar, belirli reklam kampanyalarına ait performans verilerini analiz edebilir, etkileşim oranlarını inceleyebilir ve hedef kitle analizleri yapabilir. Reklam verisi analizi, pazarlama stratejilerinin geliştirilmesine ve kampanya optimizasyonuna katkı sağlar. Analiz sonuçlarının başarılı bir şekilde iletilip iletilmediği ve tamamlanma durumu gibi metrikler de burada takip edilir.\",\n    \"Enums\": \"IsSuccessSent: true, false | IsComplete: true, false\",\n    \"EnumsDescription\": \"IsSuccessSent: Kullanıcının yaptığı reklam analizi isteğinin başarıyla gelip gelmediğini ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder. | IsComplete: Kullanıcının yaptığı reklam analiz işleminin başarıyla tamamlanıp tamamlanmadığını ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder.\",\n    \"Schema\": {\"_id\": \"ObjectId\", \"CreatedAt\": \"datetime\", \"Email\": \"str\", \"DataId\": \"str\", \"DataSubject\": \"str\", \"Response\": \"str\", \"IsSuccessSent\": \"bool\", \"IsComplete\": \"bool\"},\n    \"SimilarityScore\": 0.5675659501485473\n  }\n]\n```\n"}]
[{"role": "system", "content": "Sen sadece Türkçe konuşan ve düşünen, MongoDB ve Python'da usta bir yapay zeka modelisin.\nKullanıcının isteklerini gerçekleştirecek python kodları üret.\n**Ancak sadece okuma (`find`, `aggregate`) işlemleri yapabilirsin.** Silme (`delete`), güncelleme (`update`) veya ekleme (`insert`) işlemleri içeren kodlar yazmamalısın.\n"}, {"role": "user", "content": "maillerini onaylamış kullanıcılardan data analysis yapmış olanların email adreslerini listeler misin? sorgusunu gerçekleştirmek için gerekli olan db name ve collection bilgilerini aşağıdaki şemadan seç:\n\n[{'DBName': 'Emotion4U_NotificationDB', 'Collection': 'NotificationTemplates', 'Enums': 'EventType: ForgotPassword, Register | NotificationType: Email, Sms', 'EnumsDescription': 'EventType: Bildirim şablonlarının hangi olay için kullanılacağını belirtir. ForgotPassword, şifre sıfırlama işlemi için kullanılan şablonları ifade eder. | NotificationType: Şablonun hangi iletişim kanalında kullanılacağını belirler. Email şablonları e-posta bildirimleri için, Sms şablonları ise kısa mesajlar için kullanılır.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Subject': 'str', 'Template': 'str', 'NotificationType': 'str', 'EventType': 'str'}}, {'DBName': 'Emotion4U_UserDB', 'Collection': 'User', 'Enums': 'Role: Admin, Callback, User | IsEmailConfirmed: true, false', 'EnumsDescription': 'Role: Kullanıcının sistemdeki yetki düzeyini belirtir. Admin yöneticileri, Callback sistemin dış servisler için oluşturduğu özel hesapları, User ise standart kullanıcıları ifade eder. | IsEmailConfirmed: Kullanıcının emailini onaylayıp onaylamadığını ifade eder. true ise onaylı, false ise onaysız email demektir.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'FullName': 'str', 'Email': 'str', 'PhoneNumber': 'str', 'Password': 'str', 'LastTokens': 'list', 'Role': 'str', 'IsEmailConfirmed': 'bool'}}]\n\n**‼️ DİKKAT: Cevabın yalnızca aşağıdaki formatta JSON verisi içermesi ve kullanıcı sorgusuyla ilişkili tüm veritabanı bilgilerini eksiksiz kapsaması gerekmektedir. **\n```json\n[\n  {\n    \"DBName\": \"db_name1\",\n    \"Collection\": \"collection_name1\",\n    \"Enums\": \"enums1\",\n    \"EnumsDescription\": \"enumsdescription1\",\n    \"Schema\": \"schema1\"\n  },\n  ...\n]\n```\n"}, {"role": "assistant", "content": "Aşağıda, kullanıcı sorgusuyla uygun olan MongoDB ve Python kodları sunulmaktadır. Bu kodlar, `Emotion4U_NotificationDB` adlı veritabanındaki `NotificationTemplates` koleksiyonundan ve `Emotion4U_UserDB` adlı veritabanındaki `User` koleksiyonundan verileri çeker ve istenen sorguyu gerçekleştirmek için kullanılır.\n\n```python\nimport pymongo\n\n# MongoDB bağlantısını kurun\nclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")\n\n# Veritabanları seçin\nnotification_db = client[\"Emotion4U_NotificationDB\"]\nuser_db = client[\"Emotion4U_UserDB\"]\n\n# Veritabanları içindeki koleksiyonları seçin\nnotification_collection = notification_db[\"NotificationTemplates\"]\nuser_collection = user_db[\"User\"]\n\n# Kullanıcıların email adreslerini listeleme sorgusu\nquery = {\n    \"EventType\": \"Register\",\n    \"NotificationType\": \"Email\",\n    \"IsEmailConfirmed\": True\n}\n\n# Sorguyu kullanarak verileri al\nresult = user_collection.find(query)\n\n# Email adreslerini listele\nemail_addresses = [user[\"Email\"] for user in result]\n\n# Sonuçları JSON formatında döndür\nresponse = [\n    {\n        \"DBName\": \"Emotion4U_NotificationDB\",\n        \"Collection\": \"NotificationTemplates\",\n        \"Enums\": \"EventType: ForgotPassword, Register | NotificationType: Email, Sms\",\n        \"EnumsDescription\": \"EventType: Bildirim şablonlarının hangi olay için kullanılacağını belirtir. ForgotPassword, şifre sıfırlama işlemi için kullanılan şablonları ifade eder. | NotificationType: Şablonun hangi iletişim kanalında kullanılacağını belirler. Email şablonları e-posta bildirimleri için, Sms şablonları ise kısa mesajlar için kullanılır.\",\n        \"Schema\": '{\"_id\":\"ObjectId\",\"CreatedAt\":\"datetime\",\"Subject\":\"str\",\"Template\":\"str\",\"NotificationType\":\"str\",\"EventType\":\"str\"}'\n    },\n    {\n        \"DBName\": \"Emotion4U_UserDB\",\n        \"Collection\": \"User\",\n        \"Enums\": \"Role: Admin, Callback, User | IsEmailConfirmed: true, false\",\n        \"EnumsDescription\": \"Role: Kullanıcının sistemdeki yetki düzeyini belirtir. Admin yöneticileri, Callback sistemin dış servisler için oluşturduğu özel hesapları, User ise standart kullanıcıları ifade eder. | IsEmailConfirmed: Kullanıcının emailini onaylayıp onaylamadığını ifade eder. true ise onaylı, false ise onaysız email demektir.\",\n        \"Schema\": '{\"_id\":\"ObjectId\",\"CreatedAt\":\"datetime\",\"FullName\":\"str\",\"Email\":\"str\",\"PhoneNumber\":\"str\",\"Password\":\"str\",\"LastTokens\":\"list\",\"Role\":\"str\",\"IsEmailConfirmed\":\"bool\"}'\n    }\n]\n\nprint(email_addresses)\nprint(response)\n```\n\nBu kod, belirtilen sorguyu kullanarak `User` koleksiyonundan verileri çeker ve sadece email adreslerini listeler. Sonucları JSON formatında döndürmek için, veritabanı bağlantıları ve sorguların sonuçlarını içeren bir JSON objesi oluşturur."}]
[{"role": "system", "content": "Sen sadece Türkçe konuşan ve düşünen, MongoDB ve Python'da usta bir yapay zeka modelisin.\nKullanıcının isteklerini gerçekleştirecek python kodları üret.\n**Ancak sadece okuma (`find`, `aggregate`) işlemleri yapabilirsin.** Silme (`delete`), güncelleme (`update`) veya ekleme (`insert`) işlemleri içeren kodlar yazmamalısın.\n"}, {"role": "user", "content": "**(maillerini onaylamış kullanıcılardan data analysis yapmış olanların email adreslerini listeler misin?)** sorgusunu gerçekleştirmek için gerekli olan db name ve collection bilgilerini aşağıdaki şemadan seç ve istenen formatta cevap ver:\n\n[{'DBName': 'Emotion4U_NotificationDB', 'Collection': 'NotificationTemplates', 'Enums': 'EventType: ForgotPassword, Register | NotificationType: Email, Sms', 'EnumsDescription': 'EventType: Bildirim şablonlarının hangi olay için kullanılacağını belirtir. ForgotPassword, şifre sıfırlama işlemi için kullanılan şablonları ifade eder. | NotificationType: Şablonun hangi iletişim kanalında kullanılacağını belirler. Email şablonları e-posta bildirimleri için, Sms şablonları ise kısa mesajlar için kullanılır.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Subject': 'str', 'Template': 'str', 'NotificationType': 'str', 'EventType': 'str'}}, {'DBName': 'Emotion4U_UserDB', 'Collection': 'User', 'Enums': 'Role: Admin, Callback, User | IsEmailConfirmed: true, false', 'EnumsDescription': 'Role: Kullanıcının sistemdeki yetki düzeyini belirtir. Admin yöneticileri, Callback sistemin dış servisler için oluşturduğu özel hesapları, User ise standart kullanıcıları ifade eder. | IsEmailConfirmed: Kullanıcının emailini onaylayıp onaylamadığını ifade eder. true ise onaylı, false ise onaysız email demektir.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'FullName': 'str', 'Email': 'str', 'PhoneNumber': 'str', 'Password': 'str', 'LastTokens': 'list', 'Role': 'str', 'IsEmailConfirmed': 'bool'}}, {'DBName': 'Emotion4U_NotificationDB', 'Collection': 'NotificationRequests', 'Enums': 'EventType: ForgotPassword, Register | NotificationType: Email, Sms', 'EnumsDescription': 'EventType: Bildirimlerin hangi olay sonucunda tetiklendiğini gösterir. Örneğin, ForgotPassword şifre sıfırlama işlemini, Register ise yeni kullanıcı kaydını ifade eder. | NotificationType: Bildirimlerin hangi iletişim kanalıyla gönderildiğini belirtir. Email e-posta ile, Sms ise kısa mesaj ile gönderildiğini gösterir.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'PhoneNumber': 'str', 'Content': 'str', 'EventType': 'str', 'NotificationType': 'str', 'Status': 'str'}}, {'DBName': 'Emotion4U_EvaluationDB', 'Collection': 'AdvertisementDataAnalyses', 'Enums': 'IsSuccessSent: true, false | IsComplete: true, false', 'EnumsDescription': 'IsSuccessSent: Kullanıcının yaptığı reklam analizi isteğinin başarıyla gelip gelmediğini ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder. | IsComplete: Kullanıcının yaptığı reklam analiz işleminin başarıyla tamamlanıp tamamlanmadığını ifade eder. true işlemin başarılı olduğunu false olmadığını ifade eder.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'DataId': 'str', 'DataSubject': 'str', 'Response': 'str', 'IsSuccessSent': 'bool', 'IsComplete': 'bool'}}, {'DBName': 'Emotion4U_EvaluationDB', 'Collection': 'Subscriptions', 'Enums': 'Package: Free, Premium, Custom', 'EnumsDescription': 'Package: Kullanıcının sahip olduğu abonelik türü. Free ücretsiz planı, Premium daha fazla analiz hakkı sunan bir paketi ve Custom kullanıcıya özel belirlenen bir paketi ifade eder.', 'Schema': {'_id': 'ObjectId', 'CreatedAt': 'datetime', 'Email': 'str', 'Package': 'str', 'UsedQuota': {'type': 'dict', 'structure': {'EvaluateDataQuota': 'int', 'EvaluateCVQuota': 'int', 'EvaluateAdvertisementDataQuota': 'int'}}, 'Quota': {'type': 'dict', 'structure': {'EvaluateDataQuota': 'int', 'EvaluateCVQuota': 'int', 'EvaluateAdvertisementDataQuota': 'int'}}}}]\n\n**‼️ DİKKAT: Cevabın yalnızca aşağıdaki formatta JSON verisi içermesi ve kullanıcı sorgusuyla ilişkili tüm veritabanı bilgilerini eksiksiz kapsaması gerekmektedir. **\n```json\n[\n  {\n    \"DBName\": \"db_name1\",\n    \"Collection\": \"collection_name1\",\n    \"Enums\": \"enums1\",\n    \"EnumsDescription\": \"enumsdescription1\",\n    \"Schema\": \"schema1\"\n  },\n  ...\n]\n```\n"}, {"role": "assistant", "content": "```json\n[\n  {\n    \"DBName\": \"Emotion4U_NotificationDB\",\n    \"Collection\": \"NotificationRequests\",\n    \"Enums\": \"EventType: ForgotPassword, Register | NotificationType: Email, Sms\",\n    \"EnumsDescription\": \"EventType: Bildirimlerin hangi olay sonucunda tetiklendiğini gösterir. Örneğin, ForgotPassword şifre sıfırlama işlemini, Register ise yeni kullanıcı kaydını ifade eder. | NotificationType: Bildirimlerin hangi iletişim kanalıyla gönderildiğini belirtir. Email e-posta ile, Sms ise kısa mesaj ile gönderildiğini gösterir.\",\n    \"Schema\": {\n      \"_id\": \"ObjectId\",\n      \"CreatedAt\": \"datetime\",\n      \"Email\": \"str\",\n      \"PhoneNumber\": \"str\",\n      \"Content\": \"str\",\n      \"EventType\": \"str\",\n      \"NotificationType\": \"str\",\n      \"Status\": \"str\"\n    }\n  },\n  {\n    \"DBName\": \"Emotion4U_UserDB\",\n    \"Collection\": \"User\",\n    \"Enums\": \"Role: Admin, Callback, User | IsEmailConfirmed: true, false\",\n    \"EnumsDescription\": \"Role: Kullanıcının sistemdeki yetki düzeyini belirtir. Admin yöneticileri, Callback sistemin dış servisler için oluşturduğu özel hesapları, User ise standart kullanıcıları ifade eder. | IsEmailConfirmed: Kullanıcının emailini onaylayıp onaylamadığını ifade eder. true ise onaylı, false ise onaysız email demektir.\",\n    \"Schema\": {\n      \"_id\": \"ObjectId\",\n      \"CreatedAt\": \"datetime\",\n      \"FullName\": \"str\",\n      \"Email\": \"str\",\n      \"PhoneNumber\": \"str\",\n      \"Password\": \"str\",\n      \"LastTokens\": \"list\",\n      \"Role\": \"str\",\n      \"IsEmailConfirmed\": \"bool\"\n    }\n  },\n  {\n    \"DBName\": \"Emotion4U_NotificationDB\",\n    \"Collection\": \"NotificationTemplates\",\n    \"Enums\": \"EventType: ForgotPassword, Register | NotificationType: Email, Sms\",\n    \"EnumsDescription\": \"EventType: Bildirim şablonlarının hangi olay için kullanılacağını belirtir. ForgotPassword, şifre sıfırlama işlemi için kullanılan şablonları ifade eder. | NotificationType: Şablonun hangi iletişim kanalında kullanılacağını belirler. Email şablonları e-posta bildirimleri için, Sms şablonları ise kısa mesajlar için kullanılır.\",\n    \"Schema\": {\n      \"_id\": \"ObjectId\",\n      \"CreatedAt\": \"datetime\",\n      \"Subject\": \"str\",\n      \"Template\": \"str\",\n      \"NotificationType\": \"str\",\n      \"EventType\": \"str\"\n    }\n  }\n]\n```"}]
