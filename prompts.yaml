generate_example_queries: |
  Aşağıdaki MongoDB Database {db_name} ve Collection {collection} isimlerine dikkat ederek ve aşağıdaki şemaya uyarak:
  {structure}

  Bana Türkçe metinsel olarak örnek güzel üret ve json formatında ver:

  Örnek sorgu: 
  abc@example.com mailli kişi en son ne zaman analiz yapmıştır?

  Cevabın da aşağıdaki gibi bir string json listesi olmalı 
  Örneğin: 
  [
      "ÖRNEK QUERY (METİN OLARAK)",
      "ÖRNEK QUERY2 (METİN OLARAK)",
      "ÖRNEK QUERY3 (METİN OLARAK)",
      .
      .
      .
  ]

  10 adet örnek üret ve sadece JSON listesi verisini senden istediğim gibi döndür.

generate_mongo_query_local: |
  Given the following MongoDB schema:
  {schema}

  Convert the following user query into a MongoDB query:
  "{user_query}"

  Return only the JSON query without any explanation.

generate_mongo_query_gemini: |
  Aşağıdaki MongoDB şema(lar)ına dayanarak:
  {schema}

  Kullanıcının şu sorgusunu gerçekleştiren bir Python kodu yaz:
  {user_query}
  
  Sadece Python kodunu döndür ve datalardaki objectId'leri gösterme. Kodda try-catch bloklarıyla birlikte client = pymongo.MongoClient("mongodb://localhost:27017/") yapısını kullan. 
  Eğer kod catch'e düşerse hata mesajı olarak ekrana "Exception" yaz ve kod çalışmayı bitirdiğinde ekrana mutlaka bir response yaz başka hiçbir açıklama ekleme. 

  Eğer kullanıcı seni ilgili db şemasında olmayan bir alan ya da işlev için kullanmak istiyorsa bu isteğini gerçekleştirmek yerine ekrana "Bu işlemi gerçekleştirmeye yetkim yok" yazan bir python scripti yaz

failed_response_repair: |
  Aşağıdaki MongoDB şema(lar)ına dayanarak:
  {schema}

  Ürettiğin kodda {script} 
  Aşağıdaki hatayı alıyorum ve senden {user_query} işlemini gerçekleştirmeni istemiştim:
  Bana sonuç olarak bunu dönen bir kod yazdın {execution_query} ancak yazdığın kod {error_feedbacks} işlem(ler)ini gerçekleştirmiyor.
  
  Bu kodu düzenle ve düzenlerken sadece python kodunu döndür ve kodda try-catch bloklarıyla birlikte client = pymongo.MongoClient("mongodb://localhost:27017/") yapısını kullan. 
  Eğer kod catch'e düşerse hata mesajı olarak ekrana "Exception" yaz ve kod başarıyla çalışırsa ekrana mutlaka bir response yaz başka hiçbir açıklama ekleme. 

  Ayrıca kullanıcı seni ilgili db şemasında olmayan bir alan ya da işlev için kullanmak istiyorsa bu isteğini gerçekleştirmek yerine ekrana "Bu işlemi gerçekleştirmeye yetkim yok" yazan bir python scripti yaz
